//descargar imagen 
docker run ubuntu

//ejecutar con terminal interactiva
docker run -it ubuntu bash

//construir imagen
docker build . //el punto es decir que contruya una imagen donde se hubique el dockerfile, en este caso esta en la raiz

//listar imagenes
docker images
//copiar IMAGE ID
8d5263fde273

//ejecutar
docker run 8d5263fde273
//ejecutar imagen con puesto
    puerto externo:interno(el que usa la app), el externo puede ser cualquiera	
docker run -p 8001:8001 id


//listar contenedores
docker ps


//detener contenerdor
docker stop [name/id]


//darle un tag a la imagen o volver a generar la imagen despues de un cambio en el codigo
docker build -t usuarios .


//regenerar imagen despues de agregar cambios en el codigo del proyecto
//cada vez que se regenera la imagen se deben hacer dos cosas
1. generar el jar
.\mvnw.cmd clean package -DskipTests


2. construir la imagen
docker build -t usuarios .


//despues de optimizar \Dockerfile
//desde la raiz del proyecto se le debe pasar el path donde estÃ¡ el dockerfile -> . \msvc-usuarios\Dockerfile
D:\Disco D\Scripts\SpringBoot\curso-kubernetes> docker build -t usuarios -f .\msvc-usuarios\Dockerfile .
D:\Disco D\Scripts\SpringBoot\curso-kubernetes> docker build -t cursos -f .\msvc-cursos\Dockerfile .


//levantar imagen (puerto imagen)
docker run -p 8001:8001 usuarios


//red de comunicacion con docker
docker network --help
Commands:
  connect     Connect a container to a network
  create      Create a network
  disconnect  Disconnect a container from a network
  inspect     Display detailed information on one or more networks
  ls          List networks
  prune       Remove all unused networks
  rm          Remove one or more networks

//crear red de comunicacion
docker network create spring
//listar
docker network ls

docker run -p 8001:8001 -d --rm --name msvc-usuarios --network spring usuarios

docker run -p 8002:8002 -d --rm --name msvc-cursos --network spring cursos 

//inspeccionar contenedor
docker container inspect msvc-cursos

//imagen mysql en docker
docker pull mysql:8.0.28

//verificar imagen
docker images 

//arrarcan contenedor
	   ip externa|interna	           | nombre red   |variable entorno					      |imagen y tag de docker hub
docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa  -e MYSQL_DATABASE=msvc_usuarios mysql:8.0.28

//verificar si arranco el contenedor 
docker ps 

//revisar logs de la imagen
docker logs -f mysql8
docker logs -f msvc-cursos

//postgres
docker pull postgres:14-alpine
docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=msvc_cursos -d postgres:14-alpine

//eliminar contenedores
docker ps
docker stop name
docker rm id

1  .//reconstruir
docker build -t cursos:latest . -f .\msvc-cursos\Dockerfile
docker build -t usuarios:latest . -f .\msvc-usuarios\Dockerfile

//crear red
2   .docker network create spring
docker network ls
docker network prune

3   .//levantar contenedor
docker run -d -p 8001:8001 --rm --name msvc-usuarios --network spring usuarios
docker run -d -p 8002:8002 --rm --name msvc-cursos --network spring cursos

4. //ver la red y otros datos
docker container inspect msvc-usuarios

5   .//cuando esta dockerizado
docker run -d -p 3307:3306 --name mysql8 --network spring MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=msvc_usuarios mysql:8
docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=msvc_cursos -d postgres:14-alpine

//implementacion de volumenes para solucionar problema de persistencia, entonces que los datos se guarden fuera del contenedor creando volumenes -> local
docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=msvc_usuarios -d -v data-mysql:/var/lib/mysql --restart=always mysql:8
docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=msvc_cursos -d -v data-postgres:/var/lib/postgresql/data --restart=always -d postgres:14-alpine

//listar volumenes
docker volume ls

//utilitario linea de comandos para ingresar datos sql
docker run -it --rm --network spring mysql:8 bash

//utilitario linea de comandos para ingresar datos postgres
docker run -it --rm --network spring postgres:14-alpine psql -h postgres14 -U postgres bash

//conectarse al motor sql
mysql -hmysql8 -uroot -p

//consultas sql
show databases;
select * from usuarios;

//consultas postrges
/l listar)

//usar base de datos (use database)
\c msvc_usuarios
\c msvc_cursos

//listar tablas
\dt

//describir tabla
\d+ cursos

//salir
\q

//conectarse al motor sql
mysql -hmysql8 -uroot -p

//conectarse al motor sql
mysql -hmysql8 -uroot -p

//docker compose
docker-compose up -d
docker-compose down -v (elimina los volumenes)

//solo detener (recomemdable)
docker-compose down
docker-compose start


//build imagen en docker-compose
